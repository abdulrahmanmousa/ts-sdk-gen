// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type OptionsLegacyParser, formDataBodySerializer, urlSearchParamsBodySerializer } from '@ts-sdk-gen/client-axios';
import type { CollectionFormatData, ComplexTypesData, ComplexTypesError, ComplexTypesResponse, ComplexParamsData, ComplexParamsError, ComplexParamsResponse, ImportData, ImportError, ImportResponse, GetApiVbyApiVersionSimpleOperationData, GetApiVbyApiVersionSimpleOperationError, GetApiVbyApiVersionSimpleOperationResponse, CallWithDefaultParametersData, CallWithDefaultOptionalParametersData, CallToTestOrderOfParamsData, DeprecatedCallData, CallWithDescriptionsData, TestErrorCodeData, TestErrorCodeError, TestErrorCodeResponse, FileResponseData, FileResponseError, FileResponseResponse, PostApiVbyApiVersionFormDataData, CallWithResultFromHeaderError, CallWithResultFromHeaderResponse, MultipartRequestData, MultipartResponseError, MultipartResponseResponse, DummyAError, DummyAResponse, DummyBError, DummyBResponse, CallWithNoContentResponseError, CallWithNoContentResponseResponse, CallWithResponseAndNoContentResponseError, CallWithResponseAndNoContentResponseResponse, NonAsciiæøåÆøÅöôêÊ字符串Data, NonAsciiæøåÆøÅöôêÊ字符串Error, NonAsciiæøåÆøÅöôêÊ字符串Response, PutWithFormUrlEncodedData, DeleteFooData3, CallWithParametersData, CallWithWeirdParameterNamesData, GetCallWithOptionalParamData, PostCallWithOptionalParamData, PostCallWithOptionalParamError, PostCallWithOptionalParamResponse, PostApiVbyApiVersionRequestBodyData, CallWithResponseError, CallWithResponseResponse, CallWithDuplicateResponsesError, CallWithDuplicateResponsesResponse, CallWithResponsesError, CallWithResponsesResponse, ApiVVersionODataControllerCountError, ApiVVersionODataControllerCountResponse, TypesData, TypesError, TypesResponse, UploadFileData, UploadFileError, UploadFileResponse } from './types.gen';

export const client = createClient(createConfig());

export class CollectionFormatService {
    public static collectionFormat<ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CollectionFormatData, ThrowOnError>) {
        return (options?.client ?? client).get<void, unknown, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/collectionFormat'
        });
    }
    
}

export class ComplexService {
    public static complexTypes<ThrowOnError extends boolean = false>(options: OptionsLegacyParser<ComplexTypesData, ThrowOnError>) {
        return (options?.client ?? client).get<ComplexTypesResponse, ComplexTypesError, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/complex'
        });
    }
    
    public static complexParams<ThrowOnError extends boolean = false>(options: OptionsLegacyParser<ComplexParamsData, ThrowOnError>) {
        return (options?.client ?? client).put<ComplexParamsResponse, ComplexParamsError, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/complex/{id}'
        });
    }
    
}

export class DefaultService {
    public static export<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<void, unknown, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/no-tag'
        });
    }
    
    public static import<ThrowOnError extends boolean = false>(options: OptionsLegacyParser<ImportData, ThrowOnError>) {
        return (options?.client ?? client).post<ImportResponse, ImportError, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/no-tag'
        });
    }
    
    public static getApiVbyApiVersionSimpleOperation<ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiVbyApiVersionSimpleOperationData, ThrowOnError>) {
        return (options?.client ?? client).get<GetApiVbyApiVersionSimpleOperationResponse, GetApiVbyApiVersionSimpleOperationError, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/simple:operation'
        });
    }
    
}

export class DefaultsService {
    public static callWithDefaultParameters<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<CallWithDefaultParametersData, ThrowOnError>) {
        return (options?.client ?? client).get<void, unknown, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/defaults'
        });
    }
    
    public static callWithDefaultOptionalParameters<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<CallWithDefaultOptionalParametersData, ThrowOnError>) {
        return (options?.client ?? client).post<void, unknown, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/defaults'
        });
    }
    
    public static callToTestOrderOfParams<ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CallToTestOrderOfParamsData, ThrowOnError>) {
        return (options?.client ?? client).put<void, unknown, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/defaults'
        });
    }
    
}

export class DeprecatedService {
    /**
     * @deprecated
     */
    public static deprecatedCall<ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeprecatedCallData, ThrowOnError>) {
        return (options?.client ?? client).post<void, unknown, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/parameters/deprecated'
        });
    }
    
}

export class DescriptionsService {
    public static callWithDescriptions<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<CallWithDescriptionsData, ThrowOnError>) {
        return (options?.client ?? client).post<void, unknown, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/descriptions/'
        });
    }
    
}

export class DuplicateService {
    public static duplicateName<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<void, unknown, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/duplicate'
        });
    }
    
    public static duplicateName1<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).post<void, unknown, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/duplicate'
        });
    }
    
    public static duplicateName2<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).put<void, unknown, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/duplicate'
        });
    }
    
    public static duplicateName3<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).delete<void, unknown, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/duplicate'
        });
    }
    
}

export class ErrorService {
    public static testErrorCode<ThrowOnError extends boolean = false>(options: OptionsLegacyParser<TestErrorCodeData, ThrowOnError>) {
        return (options?.client ?? client).post<TestErrorCodeResponse, TestErrorCodeError, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/error'
        });
    }
    
}

export class FileResponseService {
    public static fileResponse<ThrowOnError extends boolean = false>(options: OptionsLegacyParser<FileResponseData, ThrowOnError>) {
        return (options?.client ?? client).get<FileResponseResponse, FileResponseError, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/file/{id}'
        });
    }
    
}

export class FormDataService {
    public static postApiVbyApiVersionFormData<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiVbyApiVersionFormDataData, ThrowOnError>) {
        return (options?.client ?? client).post<void, unknown, ThrowOnError>({
            ...options,
            ...formDataBodySerializer,
            headers: {
                'Content-Type': null,
                ...options?.headers
            },
            url: '/api/v{api-version}/formData/'
        });
    }
    
}

export class HeaderService {
    public static callWithResultFromHeader<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).post<CallWithResultFromHeaderResponse, CallWithResultFromHeaderError, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/header'
        });
    }
    
}

export class MultipartService {
    public static multipartRequest<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<MultipartRequestData, ThrowOnError>) {
        return (options?.client ?? client).post<void, unknown, ThrowOnError>({
            ...options,
            ...formDataBodySerializer,
            headers: {
                'Content-Type': null,
                ...options?.headers
            },
            url: '/api/v{api-version}/multipart'
        });
    }
    
    public static multipartResponse<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<MultipartResponseResponse, MultipartResponseError, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/multipart'
        });
    }
    
}

export class MultipleTags1Service {
    public static dummyA<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<DummyAResponse, DummyAError, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/multiple-tags/a'
        });
    }
    
    public static dummyB<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<DummyBResponse, DummyBError, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/multiple-tags/b'
        });
    }
    
}

export class MultipleTags2Service {
    public static dummyA<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<DummyAResponse, DummyAError, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/multiple-tags/a'
        });
    }
    
    public static dummyB<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<DummyBResponse, DummyBError, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/multiple-tags/b'
        });
    }
    
}

export class MultipleTags3Service {
    public static dummyB<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<DummyBResponse, DummyBError, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/multiple-tags/b'
        });
    }
    
}

export class NoContentService {
    public static callWithNoContentResponse<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<CallWithNoContentResponseResponse, CallWithNoContentResponseError, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/no-content'
        });
    }
    
    public static callWithResponseAndNoContentResponse<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<CallWithResponseAndNoContentResponseResponse, CallWithResponseAndNoContentResponseError, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/multiple-tags/response-and-no-content'
        });
    }
    
}

export class NonAsciiÆøåÆøÅöôêÊService {
    public static nonAsciiæøåÆøÅöôêÊ字符串<ThrowOnError extends boolean = false>(options: OptionsLegacyParser<NonAsciiæøåÆøÅöôêÊ字符串Data, ThrowOnError>) {
        return (options?.client ?? client).post<NonAsciiæøåÆøÅöôêÊ字符串Response, NonAsciiæøåÆøÅöôêÊ字符串Error, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/non-ascii-æøåÆØÅöôêÊ字符串'
        });
    }
    
    /**
     * Login User
     */
    public static putWithFormUrlEncoded<ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutWithFormUrlEncodedData, ThrowOnError>) {
        return (options?.client ?? client).put<void, unknown, ThrowOnError>({
            ...options,
            ...urlSearchParamsBodySerializer,
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
                ...options?.headers
            },
            url: '/api/v{api-version}/non-ascii-æøåÆØÅöôêÊ字符串'
        });
    }
    
}

export class ParametersService {
    public static deleteFoo<ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteFooData3, ThrowOnError>) {
        return (options?.client ?? client).delete<void, unknown, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/foo/{foo_param}/bar/{BarParam}'
        });
    }
    
    public static callWithParameters<ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CallWithParametersData, ThrowOnError>) {
        return (options?.client ?? client).post<void, unknown, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/parameters/{parameterPath}'
        });
    }
    
    public static callWithWeirdParameterNames<ThrowOnError extends boolean = false>(options: OptionsLegacyParser<CallWithWeirdParameterNamesData, ThrowOnError>) {
        return (options?.client ?? client).post<void, unknown, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/parameters/{parameter.path.1}/{parameter-path-2}/{PARAMETER-PATH-3}'
        });
    }
    
    public static getCallWithOptionalParam<ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetCallWithOptionalParamData, ThrowOnError>) {
        return (options?.client ?? client).get<void, unknown, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/parameters/'
        });
    }
    
    public static postCallWithOptionalParam<ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostCallWithOptionalParamData, ThrowOnError>) {
        return (options?.client ?? client).post<PostCallWithOptionalParamResponse, PostCallWithOptionalParamError, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/parameters/'
        });
    }
    
}

export class RequestBodyService {
    public static postApiVbyApiVersionRequestBody<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiVbyApiVersionRequestBodyData, ThrowOnError>) {
        return (options?.client ?? client).post<void, unknown, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/requestBody/'
        });
    }
    
}

export class ResponseService {
    public static callWithResponseAndNoContentResponse<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<CallWithResponseAndNoContentResponseResponse, CallWithResponseAndNoContentResponseError, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/multiple-tags/response-and-no-content'
        });
    }
    
    public static callWithResponse<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<CallWithResponseResponse, CallWithResponseError, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/response'
        });
    }
    
    public static callWithDuplicateResponses<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).post<CallWithDuplicateResponsesResponse, CallWithDuplicateResponsesError, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/response'
        });
    }
    
    public static callWithResponses<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).put<CallWithResponsesResponse, CallWithResponsesError, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/response'
        });
    }
    
}

export class SimpleService {
    public static apiVVersionODataControllerCount<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<ApiVVersionODataControllerCountResponse, ApiVVersionODataControllerCountError, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/simple/$count'
        });
    }
    
    public static getCallWithoutParametersAndResponse<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<void, unknown, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/simple'
        });
    }
    
    public static putCallWithoutParametersAndResponse<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).put<void, unknown, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/simple'
        });
    }
    
    public static postCallWithoutParametersAndResponse<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).post<void, unknown, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/simple'
        });
    }
    
    public static deleteCallWithoutParametersAndResponse<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).delete<void, unknown, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/simple'
        });
    }
    
    public static optionsCallWithoutParametersAndResponse<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).options<void, unknown, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/simple'
        });
    }
    
    public static headCallWithoutParametersAndResponse<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).head<void, unknown, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/simple'
        });
    }
    
    public static patchCallWithoutParametersAndResponse<ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) {
        return (options?.client ?? client).patch<void, unknown, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/simple'
        });
    }
    
}

export class TypesService {
    public static types<ThrowOnError extends boolean = false>(options: OptionsLegacyParser<TypesData, ThrowOnError>) {
        return (options?.client ?? client).get<TypesResponse, TypesError, ThrowOnError>({
            ...options,
            url: '/api/v{api-version}/types'
        });
    }
    
}

export class UploadService {
    public static uploadFile<ThrowOnError extends boolean = false>(options: OptionsLegacyParser<UploadFileData, ThrowOnError>) {
        return (options?.client ?? client).post<UploadFileResponse, UploadFileError, ThrowOnError>({
            ...options,
            ...urlSearchParamsBodySerializer,
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
                ...options?.headers
            },
            url: '/api/v{api-version}/upload'
        });
    }
    
}